<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Goland 报错 cannot use xx (type string) as the type any]]></title>
      <url>/golang/2022/07/21/Goland-%E6%8A%A5%E9%94%99-Cannot-use-xx-(type-string)-as-the-type-any/</url>
      <content type="html"><![CDATA[<h2 id="问题">问题</h2>

<p>升级 go 1.18 后，goland 出现了一些奇怪的报错。比如在<code class="language-plaintext highlighter-rouge">panic("implement me")</code>下出现了红色波浪线。</p>

<p>即报错<code class="language-plaintext highlighter-rouge">cannot use "implement me" (type string) as the type any</code>。我心想，这么个语法还能报错？我这程序明明能跑，是不是你 goland 坏了。</p>

<h2 id="办法">办法</h2>
<p>搜了搜，果然<a href="https://youtrack.jetbrains.com/issue/GO-12171">有人问过了</a>，goland 版本问题，升级到 2021.3.3 以上就可以解决。</p>

<h2 id="瞎扯">瞎扯</h2>
<p>看起来是 1.18 引入的特性比较多，goland 费了一番功夫才适配好。想起上个月底收到了 <a href="https://blog.jetbrains.com/blog/2022/06/29/increased-subscription-pricing-for-ides-net-tools-and-the-all-products-pack/">jetbrain 涨价</a>的邮件，又去看了看价格单，全家桶一年会贵一百好几，原价 DDL 是今年 10 月，我可以再犹豫两个月决定续不续费，续单个软件还是续全家桶。</p>

<p>平时订阅了一些技术公众号，golang 有点风吹草动都报团更文。什么出新特性啦，最近写 go 的某大佬离开 google 啦…… jetbrain 涨价竟然没看到有博主推，明明身边 10 个 golang 程序员 9 个在用 goland。或许因为用盗版比例太高了吧，或者大厂程序员都是靠公司付钱自己不关心。</p>

<p>jetbrain 的涨价通知写得蛮真诚的，说 7 年了第一次涨价，此前新增了很多特性都没涨价，对老用户的折扣也一直很大，实在是成本上升到了要涨价的时刻了，以后争取尽量不涨。</p>

<p>不知道这个涨价，能不能算作「我受到了欧美通货膨胀波及」的例子。</p>

<p>Anyway，希望认真做软件的人能挣到钱。</p>

]]></content>
      <categories>
        
          <category> golang </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[The End of the World Is Just the Beginning]]></title>
      <url>/future/2022/07/20/The-End-of-the-World-Is-Just-the-Beginning/</url>
      <content type="html"><![CDATA[<p>想看这本书：<a href="https://www.amazon.com/End-World-Just-Beginning-Globalization/dp/006323047X/ref=tmm_hrd_swatch_0?_encoding=UTF8&amp;qid=&amp;sr=">The End of the World Is Just the Beginning</a>，由<a href="https://podcasts.google.com/feed/aHR0cDovL3dha2luZ3VwLmxpYnN5bi5jb20vcnNz/episode/YjQ0MWUyZGEtNjI5Ny00NDNhLThiMWEtOTg4NjIxOGNiMDFi?sa=X&amp;ved=0CAUQkfYCahcKEwjY95bCqoX5AhUAAAAAHQAAAAAQCg&amp;hl=en">Make Sense</a> 播客推荐。虽然现在听英文播客还有些费力，而且也没有付费去看全集，但看了介绍还蛮感兴趣的。</p>

<p>最近发生的事情很多，疫情、战争、欧元日元贬值、能源紧张……想看一些关于近未来的分析，也有一些长期感兴趣的领域，都在中文领域较难找到有获得感的内容。慢慢看些英文内容吧。</p>

<h3 id="简介">简介</h3>

<blockquote>
  <p>A New York Times Bestseller!
2019 was the last great year for the world economy.
For generations, everything has been getting faster, better, and cheaper. Finally, we reached the point that almost anything you could ever want could be sent to your home within days - even hours - of when you decided you wanted it.</p>
</blockquote>

<p>纽约时报畅销书。
2019 是世界经济最后的好日子。
几代人以来，一切都变得更快、更好、更便宜。 最后，我们到达一个这样的时刻：几乎任何你想要的东西都可以在你决定想要它的几天内（甚至几小时）内送到家中。</p>

<blockquote>
  <p>America made that happen, but now America has lost interest in keeping it going.</p>
</blockquote>

<p>美国做到了这一点，但现在美国已经失去了继续保持下去的兴趣。</p>

<blockquote>
  <p>Globe-spanning supply chains are only possible with the protection of the U.S. Navy. The American dollar underpins internationalized energy and financial markets. Complex, innovative industries were created to satisfy American consumers. American security policy forced warring nations to lay down their arms. Billions of people have been fed and educated as the American-led trade system spread across the globe.</p>
</blockquote>

<p>只有在美国海军的保护下，全球供应链才有可能实现。美元支撑着国际化的能源和金融市场。为了满足美国消费者的需求，创建了复杂的创新产业。美国的安全政策迫使交战国放下武器。随着美国主导的贸易体系遍布全球，数十亿人得到了食物和教育。</p>

<blockquote>
  <p>All of this was artificial. All this was temporary. All this is ending.
In The End of the World is Just the Beginning, author and geopolitical strategist Peter Zeihan maps out the next world: a world where countries or regions will have no choice but to make their own goods, grow their own food, secure their own energy, fight their own battles, and do it all with populations that are both shrinking and aging.</p>
</blockquote>

<p>这一切都是人为的。这一切都是暂时的。这一切都结束了。
在本书 End of the World is Just the Beginning 中，作家兼地缘政治战略家 Peter Zeihan 描绘了下一个世界：一个国家或地区别无选择，只能制造自己的商品、种植自己的粮食、确保自己的能源的世界，打自己的仗，并与正在萎缩和老龄化的人口一起做这一切。</p>

<blockquote>
  <p>The list of countries that make it all work is smaller than you think. Which means everything about our interconnected world - from how we manufacture products, to how we grow food, to how we keep the lights on, to how we shuttle stuff about, to how we pay for it all - is about to change.
In customary Zeihan fashion, rather than yelling fire in the geoeconomic theatre, he narrates the accumulation of matchsticks, gasoline, and dynamite in the hands of the oblivious audience, suggesting we might want to call the fire department.</p>
</blockquote>

<p>能搞定这一切的国家比你想象的要少。这意味着我们相互关联的世界的一切——从我们如何制造产品，到我们如何种植食物，到我们如何保持照明，再到我们如何穿梭，再到我们如何为这一切付费——都将发生变化。
以 Zeihan 一贯的方式，他没有在地缘经济剧院中大喊大火，而是讲述了火柴棍、汽油和炸药在不知情的观众手中的堆积，暗示我们可能想打电话给消防部门。</p>

<blockquote>
  <p>A world ending. A world beginning. Zeihan brings readers along for an illuminating (and a bit terrifying) ride packed with foresight, wit, and his trademark irreverence.</p>
</blockquote>

<p>一个世界结束了，一个世界开始了。 Zeihan 为读者带来了充满远见、智慧和他标志性的不敬的启蒙之旅（也有点可怕）。</p>
]]></content>
      <categories>
        
          <category> Future </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Introduction to MIR]]></title>
      <url>/mir/2022/07/10/MIR/</url>
      <content type="html"><![CDATA[<h2 id="机缘">机缘</h2>
<p>MIR: music information retrieval，音乐信息检索。以前遇见过一个学「用 AI 创作音乐」的姑娘，忘记具体专业名叫什么了，当时只觉得这个方向好高大上。
最近偶然刷到一个 MIR 教程，听起来有些类似。只不过比起「创作音乐」，更像是「解构音乐」，听起来并不要求工程师很懂音乐，让我这样平凡的音乐爱好者突然有了兴趣和勇气去了解。</p>

<h2 id="mir-是什么有什么应用场景">MIR 是什么？有什么应用场景</h2>

<p>2019年一篇知乎专栏文章翻译了一篇MIR综述，<a href="https://zhuanlan.zhihu.com/p/84756021">深度学习在音乐信息检索(MIR)方向的应用介绍</a>。好奇3年过去了，又有了什么新进展。</p>

<h3 id="相关会议活动比赛">相关会议&amp;活动&amp;比赛</h3>

<p>国外：<a href="https://www.aisongcontest.com/">aisongcontest</a> ，小红书有账号
国内：</p>
<ul>
  <li>音乐人工智能发展研讨会</li>
  <li>“预见新时代数字音乐未来”数字音乐产业发展论坛</li>
</ul>

<h3 id="工业界应用">工业界应用</h3>
<ul>
  <li>AI 创作音乐
    <ul>
      <li>2022年初， <a href="https://cloud.tencent.com/developer/article/1949865">苹果收购AI 音乐初创公司</a>，AI Music 公司利用人工智能来生成量身定制的音乐，旨在为营销人员、出版商、健身人士和创意机构创建定制的音频解决方案。我理解优势在于可以个性化生成+免版权税。个性化是指根据运动时的心率改变以适应锻炼强度。</li>
      <li>更多海外 <a href="https://36kr.com/p/1321999509686787">AI 音乐公司</a>，其中 AIVA 获得了网易投资。不过这都是两年前的事了，裁员大背景下不知道网易还会不会继续发力。</li>
      <li>国内大厂有<a href="https://tianyin.163.com/">网易天音</a>，可以选一些风格参数，渲染歌曲出来，网易云音乐 app 上搜网易天音能找到一些歌曲，但是还难说很好听吧。腾讯、抖音、快手等也有<a href="https://new.qq.com/omn/20220216/20220216A02HF700.html">入局动作</a>，感觉抖音快手这种短视频社区会更需要数量多、但质量没那么高的 AI 音乐，场景比网易云更合理一些。</li>
      <li>国内创业公司：
        <ul>
          <li><a href="https://cloud.tencent.com/developer/article/1420615">时域</a>，查了下天眼查，看起来是开发了虚拟歌姬 app。18年成立，现在参保还只有 9人</li>
          <li><a href="https://tech.sina.cn/it/2019-07-17/detail-ihytcerm4143511.d.html">灵动音</a>，起初的愿景是赋能创作者，</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>音乐教育
    <h3 id="个人应用">个人应用</h3>
  </li>
</ul>

<p>在微博看到 无吔学生 开发的 https://dango.ai/ ，提供分离人声、乐器声的工具。不一定算 MIR，觉得有趣先收集起来</p>

<h2 id="怎么学">怎么学？</h2>

<p>一个可以跟着学 MIR 的教程 <a href="https://github.com/stevetjoa/musicinformationretrieval.com">musicinformationretrieval</a></p>

<p>David Temperley 的书《The congnition of Basic Musical Structures》分析人对音乐的几种基本元素的认知。比如节拍、旋律、和声是如何被人分辨出来的。不太涉及技术，适合爱好者。
我一直想知道，为什么有的音乐会格外打动我，想知道背后的原理。这本书看起来有一些相关，抽空也看看。</p>

<p>David Temperley 的课：Music and Probability，结合数学、编程、作曲。</p>

<p>书：《集异璧》</p>
]]></content>
      <categories>
        
          <category> MIR </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Welcome to Jekyll!]]></title>
      <url>/jekyll/2022/05/10/welcome-to-jekyll/</url>
      <content type="html"><![CDATA[<h2 id="update-steps">Update Steps</h2>
<ul>
  <li>add markdown files in <code class="language-plaintext highlighter-rouge">_posts</code></li>
  <li>install requirements
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install</span>
</code></pre></div>    </div>
  </li>
  <li>preview the blog
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div>    </div>
  </li>
  <li>push to git and wait.</li>
</ul>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/about-github-pages-and-jekyll">git pages</a></li>
  <li><a href="https://www.youtube.com/watch?v=LfP7Y9Ja6Qc&amp;list=PLLAZ4kZ9dFpOPV5C5Ay0pHaa0RJFhcmcB&amp;index=3">a clear video series in youtube</a></li>
</ul>

<h2 id="default-readme">Default Readme</h2>

<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight">
  <pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre>
</figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>

]]></content>
      <categories>
        
          <category> jekyll </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
